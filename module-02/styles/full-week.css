/* 

Cascading in CSS (Cascading Style Sheets) refers to the way styles are applied to HTML elements in a hierarchical order of importance. The "cascade" aspect of CSS determines how styles are combined when multiple rules apply to a particular element. This involves three main concepts: specificity, inheritance, and the cascade order. Hereâ€™s a brief overview of each:

Specificity: This determines which style rule applies if multiple rules target the same element. Specificity is calculated based on the types of selectors used:

Inline styles have the highest specificity (e.g., <div style="color: red;">).
ID selectors (e.g., #header) have more specificity than class selectors (e.g., .nav), which in turn have more specificity than element selectors (e.g., div).
Inheritance: Some CSS properties are inherited from parent elements to child elements, while others are not. For example, text-related properties such as color and font-family are inherited, whereas box model properties like margin and border are not.

Cascade Order: When multiple rules apply to the same element, the browser determines which rule to apply based on the following order of precedence:

Importance: Rules marked with !important have the highest priority.
Origin: Styles are applied in this order of priority: user agent styles (browser default styles), user styles (styles set by the user), and author styles (styles defined by the webpage).
Specificity: More specific selectors override less specific ones.
Source Order: When specificity and importance are the same, the last rule in the CSS file overrides the earlier ones.

*/

header {
  margin-bottom: 64px;
}

h1 {
  font-size: 48px;
  color: rgb(71, 62, 62);
  margin: 0 0;
}

/*  
CSS Box Model
    Content
    Padding
    Border
    Margin
*/

/* 
selectors:
Type: elementname
ID: #id
Group: elementname, elementname ...
Class: .class
*/

/* 
Combinators:
Descendant: li p (all p with li ancestor)
Child: h2 > p (Only p which are direct children of h2)
*/

a {
  background-color: rgb(167, 1, 78);
  padding: 12px 48px;
  border-radius: 10px;
  border: 2px solid rgb(180, 12, 90);
  color: white;
  transition: all 200ms ease-in-out;
  /* because anchor is inline element margin top and bottom dosen't effect on it!, but margin left and righ effect on it */
  margin: 0 0;
  /* using inline-block change the way anchor element shows in the browser, and now margin top and bottom effect on it */
  display: inline-block;
}

/* Pseudo selector */
a:hover {
  text-decoration: none;
  background-color: rgb(180, 12, 90);
  box-shadow: 0px 0px 6px rgb(180, 12, 90);
}

ol {
  list-style: none;
  width: 500px;
  margin: 36px auto 0 auto;
  padding: 0;
}

li {
  background-color: rgb(223, 136, 124);
  border-radius: 5px;
  margin: 32px;
  padding: 16px;
  box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.5);
}

/* id selector */
#description {
  margin-bottom: 12px 0;
}

/* combinators */
/* header p {
  margin-bottom: 36px;
} */

h2 {
  color: rgb(78, 13, 5);
  font-family: "Oswald", sans-serif;
}

main p {
  margin: 12px;
  color: rgb(71, 29, 22);
}

/* margin collapsing happens for block element and bottom or top margin, and the bigger value wins */

/* specificity */
/* .daily-goal {
  margin: 12px;
  color: rgb(71, 29, 22);
} */

.highlight-goal {
  background-color: rgb(226, 115, 111);
}
